/*
 package Name : npm install @simplewebauthn/browser
 web link : https://simplewebauthn.dev/docs/packages/browser
*/


import React, { useState } from 'react';
import { startRegistration, startAuthentication } from '@simplewebauthn/browser';

const FingerprintAuth =()=> {
  const [authStatus, setAuthStatus] = useState(null);

  // Function to start fingerprint registration
  const handleRegister = async () => {
    try {
      const registrationOptions = {
        challenge: new Uint8Array(32), // Random challenge generated by the browser
        rp: { name: 'Example Corp' }, // Replace with your organization name
        user: {
          id: new Uint8Array(16), // Example user ID
          name: 'exampleuser',
          displayName: 'Example User',
        },
        pubKeyCredParams: [{ alg: -7, type: 'public-key' }],
      };

      // Start the registration process
      const attResp = await startRegistration(registrationOptions);

      // Log the registration response in console
      console.log('Fingerprint Registered:', attResp);

      setAuthStatus('Fingerprint Registered!');
    } catch (error) {
      console.error('Error during registration:', error);
      setAuthStatus('Registration Failed');
    }
  };

  // Function to authenticate using fingerprint
  const handleLogin = async () => {
    try {
      const authenticationOptions = {
        challenge: new Uint8Array(32), // Random challenge for authentication
        allowCredentials: [{
          type: 'public-key',
          id: new Uint8Array(16), // Example credential ID
        }],
      };

      // Start the authentication process
      const authResp = await startAuthentication(authenticationOptions);

      // Log the authentication response in console
      console.log('Fingerprint Authentication:', authResp);

      setAuthStatus('Fingerprint Authentication Successful!');
    } catch (error) {
      console.error('Error during authentication:', error);
      setAuthStatus('Authentication Failed');
    }
  };

  return (
    <div>
      <h1>Fingerprint Authentication</h1>
      <button onClick={handleRegister}>Register Fingerprint</button>
      <button onClick={handleLogin}>Login with Fingerprint</button>
      <p>{authStatus}</p>
    </div>
  );
}

export default FingerprintAuth;

